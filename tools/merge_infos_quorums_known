#!/usr/bin/env ruby

require 'json'

if ARGV.count != 3
  STDERR.puts "Usage: merge_infos_quorums_known <peer_infos> <quorums> <known_validators>"
  exit 1
end

peer_infos = JSON.load(File.read(ARGV[0]))
quorums = JSON.load(File.read(ARGV[1]))
known_validators = JSON.load(File.read(ARGV[2]))
seen_validators = {}

def iterate_validators(quorum, &block)
  quorum["validators"].each {|v| block[v] }
  quorum["inner_sets"].each {|qs| iterate_validators(qs, &block) }
end

quorums.each do |_, qss|
  qss.each do |qs|
    iterate_validators(qs) do |validator|
      seen_validators[validator] = { "peer_id" => validator }
    end
  end
end

peer_infos.each do |k,v|
  seen_validators[k] = v
end

quorums.each do |k, qss|
  seen_validators[k] ||= { "peer_id" => k} # this should not happen..
  seen_validators[k]["quorums"] = qss
end

known_validators.each do |k,v|
  seen_validators[k] ||= { "peer_id" => k} # this should not happen..
  seen_validators[k]["known_info"] = v
end

puts JSON.dump(seen_validators)
STDERR.puts "Seen #{seen_validators.count} validators"
